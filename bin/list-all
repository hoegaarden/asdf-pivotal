#!/usr/bin/env bash

set -euo pipefail

# Detect the tool name based on the plugin directory name used by asdf
readonly script_dir="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly file_name="$(basename "$(dirname "${script_dir}")")"

# To add a product create a case statement matching the file name and add variables as follows
  # github_repo_path
  # is the user/repository as taken from the github URL
  # e.g the part in caps: https://github.com/CONCOURSE/CONCOURSE

case $file_name in
  antctl)
    readonly github_product=vmware-tanzu/antrea
    ;;
  fly)
    readonly github_repo_path=concourse/concourse
    ;;
  credhub)
    readonly github_repo_path=cloudfoundry-incubator/credhub-cli
    ;;
  bosh)
    readonly github_repo_path=cloudfoundry/bosh-cli
    ;;
  om)
    readonly github_repo_path=pivotal-cf/om
    ;;
  pivnet)
    readonly github_repo_path=pivotal-cf/pivnet-cli
    ;;
  s5cmd)
    readonly github_repo_path=peak/s5cmd
    ;;
  *)
    echo "Product ${product_name} is not currently supported"
    exit 1
    ;;
esac

# borrowed from https://github.com/rbenv/ruby-build/pull/631/files#diff-fdcfb8a18714b33b07529b7d02b54f1dR942
function sort_versions() {
  sed 'h; s/[+-]/./g; s/.p\([[:digit:]]\)/.z\1/; s/$/.z/; G; s/\n/ /' | \
    LC_ALL=C sort -t. -k 1,1 -k 2,2n -k 3,3n -k 4,4n -k 5,5n | awk '{print $2}'
}

function list_all() {
  local versions

  local -r github_url="https://api.github.com/repos/${github_repo_path}/releases"

  curl_cmd="curl -Ls"
  if [ -n "${GITHUB_API_TOKEN:-}" ]; then
    curl_cmd="$curl_cmd -H 'Authorization: token $GITHUB_API_TOKEN'"
  fi
  curl_cmd="$curl_cmd $github_url"

  
  ret=0 && curl_response=$(eval "$curl_cmd" 2>&1) || ret="$?"
  if [[ $ret -eq 0 ]]; then
    # Fetch all tag names, and get only second column. Then remove all unnecesary characters.
    versions=$(echo $curl_response | grep -oE "tag_name\": *\".{1,15}\"," | sed 's/tag_name\": *\"//;s/\",//' | sort_versions)
    echo $versions

  else
    echo "ERROR: Failure to collect versions for $file_name"
    echo "Error message: $curl_response"
    exit 1

  fi

}

list_all